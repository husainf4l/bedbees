# Generated by Django 5.2.6 on 2025-10-09 21:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0012_calendarbulkupdate_accommodationavailability_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('reward_type', models.CharField(choices=[('credit', 'Credit'), ('upgrade', 'Upgrade'), ('getaway', 'Getaway'), ('discount', 'Discount'), ('special', 'Special Offer')], max_length=20)),
                ('cost_points', models.IntegerField(help_text='Points required to redeem')),
                ('value', models.DecimalField(decimal_places=2, help_text='Monetary value in dollars', max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('stock_quantity', models.IntegerField(blank=True, help_text='Leave blank for unlimited', null=True)),
                ('redeemed_count', models.IntegerField(default=0)),
                ('min_level', models.IntegerField(choices=[(1, 'Explorer'), (2, 'Voyager'), (3, 'Elite')], default=1, help_text='Minimum level required')),
                ('image', models.ImageField(blank=True, null=True, upload_to='rewards/')),
                ('featured', models.BooleanField(default=False)),
                ('display_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['display_order', '-featured', 'cost_points'],
            },
        ),
        migrations.CreateModel(
            name='GeniusProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_points', models.IntegerField(default=0, help_text='Current points balance')),
                ('lifetime_points', models.IntegerField(default=0, help_text='Total points earned all-time')),
                ('level', models.IntegerField(choices=[(1, 'Explorer'), (2, 'Voyager'), (3, 'Elite')], default=1)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_bookings', models.IntegerField(default=0)),
                ('total_redeemed', models.IntegerField(default=0, help_text='Total points redeemed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('level_updated_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='genius_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Genius Profile',
                'verbose_name_plural': 'Genius Profiles',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_type', models.CharField(choices=[('accommodation', 'Accommodation'), ('tour', 'Tour')], max_length=20)),
                ('check_in', models.DateField(blank=True, null=True)),
                ('check_out', models.DateField(blank=True, null=True)),
                ('booking_date', models.DateTimeField(auto_now_add=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('points_awarded', models.IntegerField(default=0, help_text='Points earned from this booking')),
                ('points_awarded_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('accommodation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='core.accommodation')),
                ('tour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bookings', to='core.tour')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='core_bookin_user_id_a894ef_idx'), models.Index(fields=['status', 'created_at'], name='core_bookin_status_b29764_idx')],
            },
        ),
        migrations.CreateModel(
            name='Redemption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_used', models.IntegerField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('fulfilled', 'Fulfilled'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('redeemed_at', models.DateTimeField(auto_now_add=True)),
                ('fulfilled_at', models.DateTimeField(blank=True, null=True)),
                ('redemption_code', models.CharField(blank=True, max_length=50, unique=True)),
                ('notes', models.TextField(blank=True)),
                ('genius_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redemptions', to='core.geniusprofile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redemptions', to=settings.AUTH_USER_MODEL)),
                ('reward', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='redemptions', to='core.reward')),
            ],
            options={
                'ordering': ['-redeemed_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='core_redemp_user_id_f44192_idx'), models.Index(fields=['redemption_code'], name='core_redemp_redempt_b19e50_idx')],
            },
        ),
    ]
