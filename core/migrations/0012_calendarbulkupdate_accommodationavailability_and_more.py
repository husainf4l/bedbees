# Generated by Django 5.2.6 on 2025-10-09 08:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0011_country'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CalendarBulkUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listing_type', models.CharField(choices=[('accommodation', 'Accommodation'), ('tour', 'Tour')], max_length=20)),
                ('listing_id', models.IntegerField(help_text='ID of the accommodation or tour')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('update_type', models.CharField(choices=[('price_change', 'Price Change'), ('availability_change', 'Availability Change'), ('block_dates', 'Block Dates'), ('unblock_dates', 'Unblock Dates'), ('minimum_stay', 'Minimum Stay Change'), ('special_rate', 'Special Rate Applied'), ('bulk_edit', 'Bulk Edit')], max_length=50)),
                ('previous_values', models.JSONField(help_text='Store previous values for undo')),
                ('new_values', models.JSONField(help_text='Store new values applied')),
                ('notes', models.TextField(blank=True)),
                ('is_undone', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Calendar Bulk Update',
                'verbose_name_plural': 'Calendar Bulk Updates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AccommodationAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('is_available', models.BooleanField(default=True, help_text='Is this date available for booking?')),
                ('is_blocked', models.BooleanField(default=False, help_text='Manually blocked by host')),
                ('price_per_night', models.DecimalField(decimal_places=2, help_text='Price for this specific date', max_digits=10)),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, help_text='Original price before discounts', max_digits=10, null=True)),
                ('minimum_stay', models.IntegerField(default=1, help_text='Minimum nights required')),
                ('maximum_stay', models.IntegerField(blank=True, help_text='Maximum nights allowed', null=True)),
                ('is_special_rate', models.BooleanField(default=False)),
                ('rate_type', models.CharField(blank=True, choices=[('weekend', 'Weekend Rate'), ('holiday', 'Holiday Rate'), ('seasonal', 'Seasonal Rate'), ('early_bird', 'Early Bird Discount'), ('last_minute', 'Last Minute Deal'), ('long_stay', 'Long Stay Discount'), ('custom', 'Custom Rate')], max_length=50)),
                ('rate_note', models.CharField(blank=True, help_text='Note about this rate', max_length=200)),
                ('total_rooms', models.IntegerField(default=1, help_text='Total rooms available')),
                ('rooms_booked', models.IntegerField(default=0, help_text='Number of rooms already booked')),
                ('rooms_blocked', models.IntegerField(default=0, help_text='Number of rooms blocked')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('accommodation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_calendar', to='core.accommodation')),
            ],
            options={
                'verbose_name': 'Accommodation Availability',
                'verbose_name_plural': 'Accommodation Availabilities',
                'ordering': ['date'],
                'indexes': [models.Index(fields=['accommodation', 'date'], name='core_accomm_accommo_ab7c48_idx'), models.Index(fields=['date', 'is_available'], name='core_accomm_date_7e3d1c_idx')],
                'unique_together': {('accommodation', 'date')},
            },
        ),
        migrations.CreateModel(
            name='TourAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('is_available', models.BooleanField(default=True, help_text='Is this tour date available?')),
                ('is_blocked', models.BooleanField(default=False, help_text='Manually blocked by host')),
                ('price_per_person', models.DecimalField(decimal_places=2, help_text='Price per person for this date', max_digits=10)),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, help_text='Original price before discounts', max_digits=10, null=True)),
                ('group_discount_percentage', models.DecimalField(decimal_places=2, default=0, help_text='Discount percentage for groups', max_digits=5)),
                ('group_size_threshold', models.IntegerField(default=5, help_text='Minimum group size for discount')),
                ('max_participants', models.IntegerField(help_text='Maximum participants for this date')),
                ('participants_booked', models.IntegerField(default=0, help_text='Number of participants booked')),
                ('min_participants', models.IntegerField(default=1, help_text='Minimum participants to run tour')),
                ('start_time', models.TimeField(blank=True, help_text='Tour start time', null=True)),
                ('end_time', models.TimeField(blank=True, help_text='Tour end time', null=True)),
                ('is_special_rate', models.BooleanField(default=False)),
                ('rate_type', models.CharField(blank=True, choices=[('weekend', 'Weekend Rate'), ('holiday', 'Holiday Rate'), ('peak_season', 'Peak Season'), ('off_season', 'Off Season'), ('early_bird', 'Early Bird Discount'), ('last_minute', 'Last Minute Deal'), ('group_special', 'Group Special'), ('custom', 'Custom Rate')], max_length=50)),
                ('rate_note', models.CharField(blank=True, max_length=200)),
                ('is_cancelled', models.BooleanField(default=False)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_calendar', to='core.tour')),
            ],
            options={
                'verbose_name': 'Tour Availability',
                'verbose_name_plural': 'Tour Availabilities',
                'ordering': ['date', 'start_time'],
                'indexes': [models.Index(fields=['tour', 'date'], name='core_tourav_tour_id_7b13ef_idx'), models.Index(fields=['date', 'is_available'], name='core_tourav_date_f9e76d_idx')],
                'unique_together': {('tour', 'date', 'start_time')},
            },
        ),
    ]
