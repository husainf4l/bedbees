# Generated by Django 5.2.6 on 2025-10-01 12:37

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_accommodation_accommodationphoto_tour_tourphoto'),
    ]

    operations = [
        migrations.AlterField(
            model_name='accommodation',
            name='bed_type',
            field=models.CharField(choices=[('single', 'Single Bed'), ('twin', 'Twin Bed'), ('double', 'Double Bed'), ('full', 'Full Bed'), ('queen', 'Queen Bed'), ('king', 'King Bed'), ('california_king', 'California King'), ('bunk', 'Bunk Bed'), ('sofa_bed', 'Sofa Bed'), ('futon', 'Futon'), ('murphy', 'Murphy Bed'), ('mixed', 'Mixed Types')], max_length=50),
        ),
        migrations.AlterField(
            model_name='accommodation',
            name='property_type',
            field=models.CharField(choices=[('hotel', 'Hotel'), ('apartment', 'Apartment'), ('villa', 'Villa'), ('resort', 'Resort'), ('hostel', 'Hostel'), ('guesthouse', 'Guesthouse'), ('boutique', 'Boutique Hotel'), ('motel', 'Motel'), ('bed_breakfast', 'Bed & Breakfast'), ('cottage', 'Cottage'), ('cabin', 'Cabin'), ('chalet', 'Chalet'), ('bungalow', 'Bungalow'), ('penthouse', 'Penthouse'), ('studio', 'Studio'), ('loft', 'Loft'), ('townhouse', 'Townhouse'), ('farmhouse', 'Farmhouse'), ('castle', 'Castle'), ('palace', 'Palace')], max_length=50),
        ),
        migrations.CreateModel(
            name='RecurringRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rule_type', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], max_length=20)),
                ('weekdays', models.JSONField(blank=True, help_text='List of weekday numbers (0=Monday)', null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('price_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('min_stay', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accommodations', models.ManyToManyField(blank=True, to='core.accommodation')),
                ('tours', models.ManyToManyField(blank=True, to='core.tour')),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='SeasonalRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Summer Season, Christmas Week', max_length=100)),
                ('rate_type', models.CharField(choices=[('accommodation', 'Accommodation'), ('tour', 'Tour')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('price_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('fixed_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('min_stay', models.IntegerField(blank=True, null=True)),
                ('is_blackout', models.BooleanField(default=False, help_text='Complete blackout period')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accommodations', models.ManyToManyField(blank=True, to='core.accommodation')),
                ('tours', models.ManyToManyField(blank=True, to='core.tour')),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='AccommodationInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('is_available', models.BooleanField(default=True)),
                ('min_stay', models.IntegerField(default=1, help_text='Minimum nights required')),
                ('max_stay', models.IntegerField(blank=True, help_text='Maximum nights allowed', null=True)),
                ('base_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('weekend_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('seasonal_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('advance_booking_days', models.IntegerField(default=0, help_text='Days in advance required for booking')),
                ('same_day_booking', models.BooleanField(default=True)),
                ('instant_book', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False, help_text='Manually blocked by host')),
                ('block_reason', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('accommodation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='core.accommodation')),
            ],
            options={
                'ordering': ['date'],
                'indexes': [models.Index(fields=['accommodation', 'date'], name='core_accomm_accommo_fabdd8_idx'), models.Index(fields=['date', 'is_available'], name='core_accomm_date_b373a1_idx')],
                'unique_together': {('accommodation', 'date')},
            },
        ),
        migrations.CreateModel(
            name='TourInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time_slot', models.TimeField(blank=True, help_text='Specific time for tour', null=True)),
                ('total_capacity', models.IntegerField(help_text='Total participants allowed')),
                ('available_spots', models.IntegerField(help_text='Currently available spots')),
                ('min_participants', models.IntegerField(default=1)),
                ('price_per_person', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('group_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('seasonal_multiplier', models.DecimalField(decimal_places=2, default=1.0, max_digits=5)),
                ('is_available', models.BooleanField(default=True)),
                ('advance_booking_hours', models.IntegerField(default=24, help_text='Hours in advance required')),
                ('is_blocked', models.BooleanField(default=False)),
                ('block_reason', models.CharField(blank=True, max_length=200, null=True)),
                ('weather_dependent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='core.tour')),
            ],
            options={
                'ordering': ['date', 'time_slot'],
                'indexes': [models.Index(fields=['tour', 'date'], name='core_tourin_tour_id_abb3a1_idx'), models.Index(fields=['date', 'is_available'], name='core_tourin_date_8a7b31_idx')],
                'unique_together': {('tour', 'date', 'time_slot')},
            },
        ),
    ]
