# Generated by Django 5.2.6 on 2025-10-01 21:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_userprofile_awards_badges_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Listing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('listing_type', models.CharField(choices=[('accommodation', 'Accommodation'), ('tour', 'Tour')], max_length=20)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('country', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('currency', models.CharField(choices=[('USD', 'US Dollar'), ('EUR', 'Euro'), ('GBP', 'British Pound'), ('JPY', 'Japanese Yen'), ('CAD', 'Canadian Dollar'), ('AUD', 'Australian Dollar'), ('CHF', 'Swiss Franc'), ('CNY', 'Chinese Yuan'), ('SEK', 'Swedish Krona'), ('NZD', 'New Zealand Dollar'), ('MXN', 'Mexican Peso'), ('SGD', 'Singapore Dollar'), ('HKD', 'Hong Kong Dollar'), ('NOK', 'Norwegian Krone'), ('KRW', 'South Korean Won'), ('TRY', 'Turkish Lira'), ('RUB', 'Russian Ruble'), ('INR', 'Indian Rupee'), ('BRL', 'Brazilian Real'), ('ZAR', 'South African Rand')], default='USD', max_length=3)),
                ('default_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('default_min_stay', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='listings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_units', models.IntegerField(help_text='How many physical units exist of this room type')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_types', to='core.listing')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('listing', 'name')},
            },
        ),
        migrations.CreateModel(
            name='AvailabilityDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('CLOSED', 'Closed'), ('BLOCKED', 'Blocked')], default='OPEN', max_length=10)),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='Override default price for this day', max_digits=10, null=True)),
                ('min_stay', models.IntegerField(blank=True, help_text='Override default min stay for this day', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_days', to='core.listing')),
            ],
            options={
                'ordering': ['date'],
                'indexes': [models.Index(fields=['listing', 'date'], name='core_availa_listing_5042da_idx'), models.Index(fields=['date', 'status'], name='core_availa_date_aa8083_idx')],
                'unique_together': {('listing', 'date')},
            },
        ),
        migrations.CreateModel(
            name='DayRoomInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('units_open', models.IntegerField(help_text='How many units are offered for sale that day')),
                ('units_booked', models.IntegerField(default=0, help_text='Units currently booked (read-only/derived)')),
                ('stop_sell', models.BooleanField(default=False, help_text='True means do not accept bookings')),
                ('cta', models.BooleanField(default=False, help_text='Close-to-arrival restriction')),
                ('ctd', models.BooleanField(default=False, help_text='Close-to-departure restriction')),
                ('override_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.listing')),
                ('room_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.roomtype')),
            ],
            options={
                'ordering': ['date', 'room_type__name'],
                'indexes': [models.Index(fields=['listing', 'date'], name='core_dayroo_listing_051f27_idx'), models.Index(fields=['room_type', 'date'], name='core_dayroo_room_ty_c2e85f_idx'), models.Index(fields=['date', 'stop_sell'], name='core_dayroo_date_2f7d3f_idx')],
                'unique_together': {('listing', 'room_type', 'date')},
            },
        ),
    ]
